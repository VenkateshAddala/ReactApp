{"version":3,"sources":["components/StudentService.jsx","components/ListDetails.jsx","components/InsertDetails.jsx","components/UpdateDetails.jsx","components/InsertToro.jsx","components/SearchComponent.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","get","details","console","log","post","id","putAPI_URL","put","updateAPI_URL","delete","deleteAPI_URL","ListDetails","props","state","list","filterList","filterValues","addDetails","bind","editDetails","deleteDetails","updateSearch","this","history","push","StudentService","deleteDetail","then","res","setState","filter","_","getDetails","data","value","event","target","toString","style","margin","className","class","onClick","map","student","key","mcDate","nameOfOrganism","updatedDate","marginLeft","marginTop","Component","InsertDetails","saveDetails","mc","passageNo","barCode","source","seedUsedAndQtyMedium","mcCardOfSeed","timeOfSetting","tempIncubation","medium","mediumR","otherAdditives","otherAdditivesR","alkali","alkaliR","acid","acidR","glassContainer","bioReactor","phController","setPhValue","do2Controller","do2value","remarksOnAeration","doneBy","sampleLabelling","qcControllTest","generalRemarkOFCulture","detailsofharvesting","reffDownStreamProcessing","donebyname1","donebyname2","preparedby","preparedByDate","deptHead","deptHeadDate","qad","qadDate","JSON","stringify","postDetails","baseState","viewDetails","removeClick","handleChange","handleControlChange","removecontrolClick","handleRemarksChange","removeRemarksClick","handleMcChange","index","ii","use12Hours","format","name","phattTime","placeholder","onChange","type","ph","phAlkali","fontSize","do2AtTime","o2","gasOrAirAddition","aerationDate","aerationTime","aerationDetails","sampleLabellingDate","handleSampleChange","sampleLabellingTime","sampleLabellingQty","sampleLabellingDetails","removeSampleClick","qcSampleNo","handleQcChange","nameOFTest","qcRefNo","qcresult","removeQcClick","preventDefault","fields","length","values","splice","putDetails","alert","err","required","defaultValue","mdbInput","typeOfContainer","numberOfContainer","agitationTypeSpeed","bioreactorTypeSize","typeAgitationOrTiltAngle","agitationSpeed","createUI","addClick","controlUI","addcontrolClick","remarksUI","addRemarksClick","sampleLabelUI","addSampleClick","qcControlUI","addQCControlClick","TextareaAutosize","aria-label","rowsMin","UpdateDetails","updateDetails","match","params","micro","disabled","InsertToro","SearchComponent","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","e","onPressEnter","handleSearch","width","marginBottom","display","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","columns","title","bordered","dataSource","useStyles","makeStyles","theme","root","position","bottom","spacing","right","ScrollTop","children","window","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Header","Fragment","CssBaseline","AppBar","Toolbar","Typography","variant","Container","path","exact","component","Fab","App","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f4d3903e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst getAPI_URL = \"http://localhost:8083/micro_control/getAll_micro\";\r\nconst postAPI_URL = \"http://localhost:8083/micro_control/insert_micro\";\r\nconst putAPI_URL = \"http://localhost:8083/micro_control/find_micro\";\r\nconst updateAPI_URL = \"http://localhost:8083/micro_control/update_micro\";\r\nconst deleteAPI_URL=\"http://localhost:8083/micro_control/delete_micro\";\r\n\r\nclass StudentService {\r\n\r\n    getDetails() {\r\n        return axios.get(getAPI_URL);\r\n    }\r\n    postDetails(details) {\r\n        console.log(\"Details ::: \",details)\r\n        return axios.post(postAPI_URL, details);\r\n    }\r\n    putDetails(id) {\r\n        return axios.get(putAPI_URL + '/' + id);\r\n    }\r\n    updateDetails(details, id) {\r\n        return axios.put(updateAPI_URL + '/' + id, details);\r\n    }\r\n\r\n    deleteDetail(id){\r\n        return axios.delete(deleteAPI_URL+ '/' + id);\r\n    }\r\n}\r\n\r\nexport default new StudentService()","import React, { Component } from 'react';\r\nimport StudentService from './StudentService';\r\n\r\nclass ListDetails extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            list: [],\r\n            filterList: null,\r\n            filterValues: []\r\n        }\r\n        this.addDetails = this.addDetails.bind(this);\r\n        this.editDetails = this.editDetails.bind(this);\r\n        this.deleteDetails = this.deleteDetails.bind(this);\r\n        this.updateSearch = this.updateSearch.bind(this);\r\n    }\r\n\r\n    addDetails() {\r\n        this.props.history.push('/Insert_Details');\r\n    }\r\n    editDetails(id) {\r\n        this.props.history.push(`/Update_Details/${id}`);\r\n    }\r\n    deleteDetails(id) {\r\n    \r\n        StudentService.deleteDetail(id).then((res) => {\r\n            this.setState({ list: this.state.list.filter((_) => _.id !== id) })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        StudentService.getDetails().then((res) => {\r\n            this.setState({ list: res.data })\r\n            let filterValues = this.state.list.filter(\r\n                (value) => {\r\n                    return value.id === this.state.filterList !== -1;\r\n                }\r\n            );\r\n            this.setState({ filterValues })\r\n            // this.setState({ filterList: res.data })\r\n        })\r\n    }\r\n    /*  handleChange(event) {\r\n         const { filterValue } = event.target.value;\r\n         console.log(filterValue);\r\n         this.setState(prevState => {\r\n             const filterList = this.state.list.filter(obj => obj.id.includes(filterValue));\r\n             return { filterList };\r\n         });\r\n     } */\r\n    async updateSearch(event) {\r\n        console.log(event.target.value)\r\n        await this.setState({ filterList: event.target.value.toString() })\r\n        /*  let filterValues = this.state.list.filter(\r\n           (value) => {\r\n               return value.id === this.state.filterList !== -1;\r\n           }\r\n       );\r\n       await this.setState({filterValues})\r\n       await console.log(this.state.filterValues) */\r\n    }\r\n\r\n    async handleSelect(event) {\r\n        /*   await this.setState({ filterList: event.target.value.toString() }) */\r\n        let filterValues = this.state.list.filter(\r\n            (value) => {\r\n                return value.id === this.state.filterList !== -1;\r\n            }\r\n        )\r\n        await this.setState({ filterValues })\r\n        await console.log(this.state.filterValues)\r\n    }\r\n\r\n    render() {\r\n        // let filterValues = this.state.list.filter(\r\n        //     (value) => {\r\n        //         return value.id === this.state.filterList !== -1;\r\n        //     }\r\n        // );\r\n        return (\r\n\r\n            <div >\r\n                <div style={{ margin: '5px 0px 50px 0px' }}><h2 className=\"text-center\" >Microbial Records</h2></div>\r\n                <div class=\"form-row\" >\r\n                    {<div class=\"form-group col-md-3\">\r\n                        {/* <input type=\"text\"\r\n                            class=\"form-control\"\r\n                            value={this.state.filterList}\r\n                            placeholder=\"Search by MC...\"\r\n                            onChange={(event) => this.updateSearch(event)} /> */}\r\n\r\n                    </div>}\r\n                    <div class=\"form-group col-md-7\"></div>\r\n                    <div class=\"form-group col-md-2\">\r\n                        <button className=\"btn btn-primary\" onClick={this.addDetails}>Insert New Record</button>\r\n\r\n                    </div>\r\n                </div >\r\n\r\n                <table style={{ margin: '20px 0px 0px 0px' }} className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>MC</th>\r\n                            <th>Date</th>\r\n                            <th>Name Of Organism</th>\r\n                            <th>Modified Date</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.filterValues.map(\r\n                                student =>\r\n                                    <tr key={student.id}>\r\n                                        <td>{student.id}</td>\r\n                                        <td>{student.mcDate}</td>\r\n                                        <td>{student.nameOfOrganism}</td>\r\n                                        <td>{student.updatedDate}</td>\r\n                                        <td>\r\n                                            <button class=\"form-group col-md-3\" style={{ marginLeft: '30px' }} className=\"btn btn-info\" onClick={() => { this.editDetails(student.id) }}>Edit</button>\r\n                                            <button style={{ marginLeft: '20px', marginTop: '3px' }} className=\"btn btn-danger\" onClick={() => { this.deleteDetails(student.id) }}>Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListDetails;","import React, { Component } from 'react';\r\nimport StudentService from './StudentService';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { TimePicker } from 'antd';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\n\r\nexport default class InsertDetails extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            mc: '',\r\n            mcDate: '',\r\n            passageNo: '',\r\n            barCode: '',\r\n            nameOfOrganism: '',\r\n            source: '',\r\n            seedUsedAndQtyMedium: '',\r\n            mcCardOfSeed: '',\r\n            timeOfSetting: '',\r\n            tempIncubation: '',\r\n            medium: '',\r\n            mediumR: '',\r\n            otherAdditives: '',\r\n            otherAdditivesR: '',\r\n            alkali: '',\r\n            alkaliR: '',\r\n            acid: '',\r\n            acidR: '',\r\n            glassContainer: {\r\n\r\n            },\r\n            bioReactor: {\r\n\r\n            },\r\n            phController: [],\r\n            setPhValue: '',\r\n            do2Controller: [],\r\n            do2value: '',\r\n            remarksOnAeration: [],\r\n            doneBy: '',\r\n            sampleLabelling: [],\r\n            qcControllTest: [],\r\n            generalRemarkOFCulture: '',\r\n            detailsofharvesting: '',\r\n            reffDownStreamProcessing: '',\r\n            donebyname1: '',\r\n            donebyname2: '',\r\n            preparedby: '',\r\n            preparedByDate: '',\r\n            deptHead: '',\r\n            deptHeadDate: '',\r\n            qad: '',\r\n            qadDate: ''\r\n        }\r\n        this.baseState = this.state;\r\n        this.saveDetails = this.saveDetails.bind(this);\r\n        this.viewDetails = this.viewDetails.bind(this);\r\n        this.removeClick = this.removeClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleControlChange = this.handleControlChange.bind(this);\r\n        this.removecontrolClick = this.removecontrolClick.bind(this);\r\n        this.handleRemarksChange = this.handleRemarksChange.bind(this);\r\n        this.removeRemarksClick = this.removeRemarksClick.bind(this);\r\n        this.handleMcChange = this.handleMcChange.bind(this);\r\n    }\r\n    viewDetails() {\r\n        this.props.history.push('/Get_Details');\r\n    }\r\n    saveDetails = () => {\r\n        // console.log(\"Entered save details..........\")\r\n        let details = {\r\n            id: this.state.mc, mcDate: this.state.mcDate, passageNo: this.state.passageNo,\r\n            barCode: this.state.barCode, nameOfOrganism: this.state.nameOfOrganism, source: this.state.source,\r\n            seedUsedAndQtyMedium: this.state.seedUsedAndQtyMedium, mcCardOfSeed: this.state.mcCardOfSeed,\r\n            timeOfSetting: this.state.timeOfSetting, tempIncubation: this.state.tempIncubation,\r\n            medium: this.state.medium, mediumR: this.state.mediumR, otherAdditives: this.state.otherAdditives,\r\n            otherAdditivesR: this.state.otherAdditivesR, alkali: this.state.alkali, alkaliR: this.state.alkaliR,\r\n            acid: this.state.acid, acidR: this.state.acidR, glassContainer: this.state.glassContainer,\r\n            bioReactor: this.state.bioReactor, phController: this.state.phController, setPhValue: this.state.setPhValue,\r\n            do2Controller: this.state.do2Controller, do2value: this.state.do2value, remarksOnAeration: this.state.remarksOnAeration,\r\n            doneBy: this.state.doneBy, sampleLabelling: this.state.sampleLabelling, qcControllTest: this.state.qcControllTest,\r\n            generalRemarkOFCulture: this.state.generalRemarkOFCulture, detailsofharvesting: this.state.detailsofharvesting,\r\n            reffDownStreamProcessing: this.state.reffDownStreamProcessing, donebyname1: this.state.donebyname1,\r\n            donebyname2: this.state.donebyname2, preparedby: this.state.preparedby, preparedByDate: this.state.preparedByDate,\r\n            deptHead: this.state.deptHead, deptHeadDate: this.state.deptHeadDate, qad: this.state.qad, qadDate: this.state.qadDate\r\n        };\r\n        console.log('Details=>', JSON.stringify(details));\r\n\r\n        // axios.post(\"http://localhost:8083/micro_control/insert_micro\", details).then(res => console.log(res))\r\n\r\n        StudentService.postDetails(details).then((res) => {\r\n            this.props.history.push('/Get_Details');\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    createUI() {\r\n        return this.state.phController.map((index, ii) =>\r\n            <div class=\"form-row\" key={ii}>\r\n                <TimePicker use12Hours\r\n                    format=\"h:mm A\"\r\n                    name=\"phattTime\" class=\"form-control col\" value={index.phattTime} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"At Time\" onChange={(event) => this.handleChange(ii, event)} />\r\n                <input type=\"text\" name=\"ph\" class=\"form-control col\" value={index.ph} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"PH\" onChange={(event) => this.handleChange(ii, event)} />\r\n                <div class=\"form-group col-md-6\">\r\n                    <input type=\"text\" class=\"form-control col\" name=\"phAlkali\" value={index.phAlkali} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"Alkali/Acid addition\" onChange={(event) => this.handleChange(ii, event)} />\r\n                </div>\r\n                <DeleteIcon style={{ fontSize: \"45\" }} onClick={(event) => this.removeClick(ii, event)} />\r\n            </div>\r\n        )\r\n    }\r\n    controlUI() {\r\n        return this.state.do2Controller.map((index, ii) =>\r\n            <div class=\"form-row\" key={ii}>\r\n                <input type=\"time\" name=\"do2AtTime\" class=\"form-control col\" value={index.do2AtTime} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"At Time\" onChange={(event) => this.handleControlChange(ii, event)} />\r\n                <input type=\"text\" name=\"o2\" class=\"form-control col\" value={index.o2} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"O2\" onChange={(event) => this.handleControlChange(ii, event)} />\r\n                <div class=\"form-group col-md-6\">\r\n                    <input type=\"text\" name=\"gasOrAirAddition\" class=\"form-control col\" value={index.gasOrAirAddition} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"gas/air addition\" onChange={(event) => this.handleControlChange(ii, event)} />\r\n                </div>\r\n                <DeleteIcon style={{ fontSize: \"45\" }} onClick={(event) => this.removecontrolClick(ii, event)} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    remarksUI() {\r\n        return this.state.remarksOnAeration.map((index, ii) =>\r\n            <div class=\"form-row\" key={ii}>\r\n\r\n                <input type=\"date\" name=\"aerationDate\" class=\"form-control col\" value={index.aerationDate} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Do 2 at Time\" onChange={(event) => this.handleRemarksChange(ii, event)} />\r\n                <input type=\"time\" name=\"aerationTime\" class=\"form-control col\" value={index.aerationTime} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Time\" onChange={(event) => this.handleRemarksChange(ii, event)} />\r\n\r\n                <div class=\"form-group col-md-6\">\r\n                    <input type=\"text\" name=\"aerationDetails\" class=\"form-control col\" value={index.aerationDetails} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"Details of addition\" onChange={(event) => this.handleRemarksChange(ii, event)} />\r\n                </div>\r\n                <DeleteIcon style={{ fontSize: \"45\" }} onClick={(event) => this.removeRemarksClick(ii, event)} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    sampleLabelUI() {\r\n        return this.state.sampleLabelling.map((index, ii) =>\r\n            <div class=\"form-row\" key={ii}>\r\n\r\n                <input type=\"date\" name=\"sampleLabellingDate\" class=\"form-control col\" value={index.sampleLabellingDate} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Date\" onChange={(event) => this.handleSampleChange(ii, event)} />\r\n                <input type=\"time\" name=\"sampleLabellingTime\" class=\"form-control col\" value={index.sampleLabellingTime} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"O2\" onChange={(event) => this.handleSampleChange(ii, event)} />\r\n                <input type=\"text\" name=\"sampleLabellingQty\" class=\"form-control col\" value={index.sampleLabellingQty} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Qty\" onChange={(event) => this.handleSampleChange(ii, event)} />\r\n                <div class=\"form-group col-md-5\">\r\n                    <input type=\"text\" name=\"sampleLabellingDetails\" class=\"form-control col\" value={index.sampleLabellingDetails} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"Details of Sample\" onChange={(event) => this.handleSampleChange(ii, event)} />\r\n                </div>\r\n\r\n                <DeleteIcon style={{ fontSize: \"45\" }} onClick={(event) => this.removeSampleClick(ii, event)} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    qcControlUI() {\r\n        return this.state.qcControllTest.map((index, ii) =>\r\n            <div class=\"form-row\" key={ii}>\r\n                <input type=\"number\" name=\"qcSampleNo\" class=\"form-control col\" value={index.qcSampleNo} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"sample no\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                <div class=\"form-group col-md-4\">\r\n                    <input type=\"text\" name=\"nameOFTest\" class=\"form-control col\" value={index.nameOFTest} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"Name\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                </div>\r\n                <input type=\"number\" name=\"qcRefNo\" class=\"form-control col\" value={index.qcRefNo} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Ref.no\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                <div class=\"form-group col-md-4\">\r\n                    <input type=\"text\" name=\"qcresult\" class=\"form-control col\" value={index.qcresult} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"Result\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                </div>\r\n\r\n                {/* <input type=\"number\" name=\"qcSampleNo\" class=\"form-control col\" value={index.qcSampleNo} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"sample no\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                <input type=\"text\" name=\"nameOFTest\" class=\"form-control col\" value={index.nameOFTest} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Name of the Test\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                <input type=\"text\" name=\"qcRefNo\" class=\"form-control col\" value={index.qcRefNo} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Test Ref.no\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                <div class=\"form-group col-md-3\">\r\n                    <input type=\"text\" name=\"qcresult\" class=\"form-control col\" value={index.qcresult} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"Result\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                </div> */}\r\n\r\n                <DeleteIcon style={{ fontSize: \"45\" }} onClick={(event) => this.removeQcClick(ii, event)} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    async addClick(event) {\r\n        event.preventDefault();\r\n        const fields = [...this.state.phController];\r\n        //console.log(fields)\r\n        //await fields.push({ phattTime: '', ph: '', phAlkali: '' });\r\n        await console.log(\"Fields :::: \", fields)\r\n        if (fields.length === 0) {\r\n            await this.setState({ phController: [...this.state.phController, fields] })\r\n        } else {\r\n            await this.setState({ phController: [...this.state.phController, {}] })\r\n        }\r\n\r\n        await console.log(this.state.phController);\r\n    }\r\n\r\n    async addcontrolClick(event) {\r\n        event.preventDefault();\r\n        const fields = [...this.state.do2Controller];\r\n        //console.log(fields)\r\n        //await fields.push({ phattTime: '', ph: '', phAlkali: '' });\r\n        //await console.log(\"Fields :::: \", fields)\r\n        if (fields.length === 0) {\r\n            await this.setState({ do2Controller: [...this.state.do2Controller, fields] })\r\n        } else {\r\n            await this.setState({ do2Controller: [...this.state.do2Controller, {}] })\r\n        }\r\n\r\n        await console.log(this.state.do2Controller);\r\n    }\r\n    async addRemarksClick(event) {\r\n        event.preventDefault();\r\n        const fields = [...this.state.remarksOnAeration];\r\n        //console.log(fields)\r\n        //await fields.push({ phattTime: '', ph: '', phAlkali: '' });\r\n        //await console.log(\"Fields :::: \", fields)\r\n        if (fields.length === 0) {\r\n            await this.setState({ remarksOnAeration: [...this.state.remarksOnAeration, fields] })\r\n        } else {\r\n            await this.setState({ remarksOnAeration: [...this.state.remarksOnAeration, {}] })\r\n        }\r\n\r\n        await console.log(this.state.remarksOnAeration);\r\n    }\r\n    async addSampleClick(event) {\r\n        event.preventDefault();\r\n        const fields = [...this.state.sampleLabelling];\r\n        //console.log(fields)\r\n        //await fields.push({ phattTime: '', ph: '', phAlkali: '' });\r\n        //await console.log(\"Fields :::: \", fields)\r\n        if (fields.length === 0) {\r\n            await this.setState({ sampleLabelling: [...this.state.sampleLabelling, fields] })\r\n        } else {\r\n            await this.setState({ sampleLabelling: [...this.state.sampleLabelling, {}] })\r\n        }\r\n\r\n        await console.log(this.state.sampleLabelling);\r\n    }\r\n\r\n    async addQCControlClick(event) {\r\n        event.preventDefault();\r\n        const fields = [...this.state.qcControllTest];\r\n        //console.log(fields)\r\n        //await fields.push({ phattTime: '', ph: '', phAlkali: '' });\r\n        //await console.log(\"Fields :::: \", fields)\r\n        if (fields.length === 0) {\r\n            await this.setState({ qcControllTest: [...this.state.qcControllTest, fields] })\r\n        } else {\r\n            await this.setState({ qcControllTest: [...this.state.qcControllTest, {}] })\r\n        }\r\n\r\n        await console.log(this.state.qcControllTest);\r\n    }\r\n\r\n\r\n    async removeClick(index, event) {\r\n        event.preventDefault();\r\n        let values = [...this.state.phController];\r\n        await values.splice(index, 1);\r\n        await this.setState({ phController: values });\r\n        console.log(values);\r\n\r\n    }\r\n    async removecontrolClick(index, event) {\r\n        event.preventDefault();\r\n        let values = [...this.state.do2Controller];\r\n        await values.splice(index, 1);\r\n        await this.setState({ do2Controller: values });\r\n        console.log(values);\r\n\r\n    }\r\n    async removeRemarksClick(index, event) {\r\n        event.preventDefault();\r\n        let values = [...this.state.remarksOnAeration];\r\n        await values.splice(index, 1);\r\n        await this.setState({ remarksOnAeration: values });\r\n        console.log(values);\r\n\r\n    }\r\n    async removeSampleClick(index, event) {\r\n        event.preventDefault();\r\n        let values = [...this.state.sampleLabelling];\r\n        await values.splice(index, 1);\r\n        await this.setState({ sampleLabelling: values });\r\n        console.log(values);\r\n\r\n    }\r\n    async removeQcClick(index, event) {\r\n        event.preventDefault();\r\n        let values = [...this.state.qcControllTest];\r\n        await values.splice(index, 1);\r\n        await this.setState({ qcControllTest: values });\r\n        console.log(values);\r\n\r\n    }\r\n\r\n    handleChange(index, event) {\r\n        //console.log(index,\" :: \",event.target.value)\r\n        let values = [...this.state.phController];\r\n        //console.log(values);\r\n        let { name, value } = event.target;\r\n        values[index] = { ...values[index], [name]: value };\r\n        console.log(values);\r\n        this.setState({ phController: values });\r\n    }\r\n    handleControlChange(index, event) {\r\n        //console.log(index,\" :: \",event.target.value)\r\n        let values = [...this.state.do2Controller];\r\n        //console.log(values);\r\n        let { name, value } = event.target;\r\n        values[index] = { ...values[index], [name]: value };\r\n        console.log(values);\r\n        this.setState({ do2Controller: values });\r\n    }\r\n    handleRemarksChange(index, event) {\r\n        //console.log(index,\" :: \",event.target.value)\r\n        let values = [...this.state.remarksOnAeration];\r\n        //console.log(values);\r\n        let { name, value } = event.target;\r\n        values[index] = { ...values[index], [name]: value };\r\n        console.log(values);\r\n        this.setState({ remarksOnAeration: values });\r\n    }\r\n    handleSampleChange(index, event) {\r\n        //console.log(index,\" :: \",event.target.value)\r\n        let values = [...this.state.sampleLabelling];\r\n        //console.log(values);\r\n        let { name, value } = event.target;\r\n        values[index] = { ...values[index], [name]: value };\r\n        console.log(values);\r\n        this.setState({ sampleLabelling: values });\r\n    }\r\n    handleQcChange(index, event) {\r\n        //console.log(index,\" :: \",event.target.value)\r\n        let values = [...this.state.qcControllTest];\r\n        //console.log(values);\r\n        let { name, value } = event.target;\r\n        values[index] = { ...values[index], [name]: value };\r\n        console.log(values);\r\n        this.setState({ qcControllTest: values });\r\n    }\r\n\r\n    async handleMcChange(event) {\r\n        let { id } = event.target.value;\r\n        console.log(id);\r\n        await this.setState({ mc: event.target.value })\r\n        if (id !== null) {\r\n            await StudentService.putDetails(this.state.mc).then((res) => {\r\n                try {\r\n                    if (res.data.id !== null) {\r\n                        alert(`Id: ${res.data.id} already exists`);\r\n                    }\r\n                } catch (err) {\r\n                    console.log(\"\")\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div  >\r\n                <div>\r\n                    <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.viewDetails}>View Records</button>\r\n                </div>\r\n                <form style={{ marginTop: '20px' }}  >\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>MC: </b></label>\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"MC\"\r\n                                name=\"mc\"\r\n                                class=\"form-control\"\r\n                                /*   className=\"form-control\" */\r\n                                value={this.state.mc}\r\n                                required\r\n                                onChange={(event) => this.handleMcChange(event)}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Date: </b></label>\r\n\r\n                            <input\r\n                                id=\"date\"\r\n                                type=\"date\"\r\n                                name=\"mcDate\"\r\n                                class=\"form-control\"\r\n                                defaultValue=\"2017/05/24\"\r\n                                mdbInput\r\n                                /*  data-date-format=\"dd-mm-yyyy\" */\r\n                                value={this.state.mcDate}\r\n                                onChange={(event) => this.setState({ mcDate: event.target.value })}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Passage:  </b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"passage\"\r\n                                class=\"form-control\"\r\n                                name=\"passageNo\"\r\n                                value={this.state.passageNo}\r\n                                onChange={(event) => this.setState({ passageNo: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Barcode: </b> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                placeholder=\"barcode\"\r\n                                name=\"barCode\"\r\n                                value={this.state.barCode}\r\n                                onChange={(event) => this.setState({ barCode: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Name of Organism:  </b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name of organism\"\r\n                                class=\"form-control\"\r\n                                name=\"nameOfOrganism\"\r\n                                value={this.state.nameOfOrganism}\r\n                                onChange={(event) => this.setState({ nameOfOrganism: event.target.value })}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Source: </b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"source\"\r\n                                class=\"form-control\"\r\n                                name=\"source\"\r\n                                value={this.state.source}\r\n                                onChange={(event) => this.setState({ source: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Seed Used & Quantity Medium:</b> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"seed used & Qty\"\r\n                                class=\"form-control\"\r\n                                name=\"seedUsedAndQtyMedium\"\r\n                                value={this.state.seedUsedAndQtyMedium}\r\n                                onChange={(event) => this.setState({ seedUsedAndQtyMedium: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>MC card of seed : </b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"MC card of seed\"\r\n                                name=\"mcCardOfSeed\"\r\n                                class=\"form-control \"\r\n                                value={this.state.mcCardOfSeed}\r\n                                onChange={(event) => this.setState({ mcCardOfSeed: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Time of Setting up :</b></label>\r\n                            <input\r\n                                type=\"time\"\r\n                                placeholder=\"Time of Setting up\"\r\n                                name=\"timeOfSetting\"\r\n                                class=\"form-control\"\r\n                                value={this.state.timeOfSetting}\r\n                                onChange={(event) => this.setState({ timeOfSetting: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Temp. Incubation(\\B0C):</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Temp. incubation\"\r\n                                class=\"form-control\"\r\n                                name=\"tempIncubation\"\r\n                                value={this.state.tempIncubation}\r\n                                onChange={(event) => this.setState({ tempIncubation: event.target.value })}\r\n                            /></div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Medium :</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Medium\"\r\n                                class=\"form-control\"\r\n                                name=\"medium\"\r\n                                value={this.state.medium}\r\n                                onChange={(event) => this.setState({ medium: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Medium R:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Medium R\"\r\n                                class=\"form-control\"\r\n                                name=\"mediumR\"\r\n                                value={this.state.mediumR}\r\n                                onChange={(event) => this.setState({ mediumR: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Other Additives:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Other Additives\"\r\n                                class=\"form-control\"\r\n                                name=\"otherAdditives\"\r\n                                value={this.state.otherAdditives}\r\n                                onChange={(event) => this.setState({ otherAdditives: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Other Additives R:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Other Additives R\"\r\n                                class=\"form-control\"\r\n                                name=\"otherAdditivesR\"\r\n                                value={this.state.otherAdditivesR}\r\n                                onChange={(event) => this.setState({ otherAdditivesR: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Alkali:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"alkali\"\r\n                                class=\"form-control\"\r\n                                name=\"alkali\"\r\n                                value={this.state.alkali}\r\n                                onChange={(event) => this.setState({ alkali: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Alkali R:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"alkali R\"\r\n                                class=\"form-control\"\r\n                                name=\"alkaliR\"\r\n                                value={this.state.alkaliR}\r\n                                onChange={(event) => this.setState({ alkaliR: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Acid:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"acid\"\r\n                                class=\"form-control\"\r\n                                name=\"acid\"\r\n                                value={this.state.acid}\r\n                                onChange={(event) => this.setState({ acid: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Acid R:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"acid R\"\r\n                                class=\"form-control\"\r\n                                name=\"acidR\"\r\n                                value={this.state.acidR}\r\n                                onChange={(event) => this.setState({ acidR: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div class=\"form-row\">\r\n                        <span class=\"form-group col-md-6 \"><h5><b>If Glass Container</b> </h5>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">Type of Container :</label>\r\n\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"type of Container\"\r\n                                    name=\"typeOfContainer\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.glassContainer.typeOfContainer}\r\n                                    onChange={(event) => this.setState({ glassContainer: { ...this.state.glassContainer, typeOfContainer: event.target.value } })}\r\n                                />\r\n                            </div>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">No.of.Container:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"no.of.Container\"\r\n                                    name=\"numberOfContainer\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.glassContainer.numberOfContainer}\r\n                                    onChange={(event) => this.setState({ glassContainer: { ...this.state.glassContainer, numberOfContainer: event.target.value } })}\r\n                                />\r\n                            </div>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">Agitation Type & speed:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"agitation type & speed\"\r\n                                    name=\"agitationTypeSpeed\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.glassContainer.agitationTypeSpeed}\r\n                                    onChange={(event) => this.setState({ glassContainer: { ...this.state.glassContainer, agitationTypeSpeed: event.target.value } })}\r\n                                />\r\n                            </div>\r\n                        </span>\r\n                        <span class=\"form-group col-md-6 \"><h5><b>If Bioreactor : </b></h5>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">Type & Size :</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"bioreactor type & size\"\r\n                                    name=\"bioreactorTypeSize\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.bioReactor.bioreactorTypeSize}\r\n                                    onChange={(event) => this.setState({ bioReactor: { ...this.state.bioReactor, bioreactorTypeSize: event.target.value } })}\r\n                                />\r\n                            </div>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">Type Agitation/Tilt angle :</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"no.of.Container\"\r\n                                    name=\"typeAgitationOrTiltAngle\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.bioReactor.typeAgitationOrTiltAngle}\r\n                                    onChange={(event) => this.setState({ bioReactor: { ...this.state.bioReactor, typeAgitationOrTiltAngle: event.target.value } })}\r\n                                /> </div>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">Agitation speed :</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"agitation type & speed\"\r\n                                    name=\"agitationSpeed\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.bioReactor.agitationSpeed}\r\n                                    onChange={(event) => this.setState({ bioReactor: { ...this.state.bioReactor, agitationSpeed: event.target.value } })}\r\n                                />\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <h5><b>PH Control :</b></h5>\r\n                    <div class=\"form-group col-md-10\">\r\n\r\n                        <div> {this.createUI()} </div>\r\n                        <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.addClick.bind(this)}>Add more</button>\r\n                        <div class=\"form-group row\"><label class=\"col-sm-5  col-form-label\"><b>If continuous monitoring, the set pH value is :</b></label>\r\n                            <div class=\"col-sm-3\"><input\r\n                                type=\"text\"\r\n                                placeholder=\"set Ph Value\"\r\n                                name=\"setPhValue\"\r\n                                class=\"form-control\"\r\n                                value={this.state.setPhValue}\r\n                                onChange={(event) => this.setState({ setPhValue: event.target.value })}\r\n                            /></div> </div>\r\n                    </div><br />\r\n                    <h5><b>DO2 CONTROL  :</b></h5>\r\n                    <div class=\"form-group col-md-10\">\r\n                        <div> {this.controlUI()} </div>\r\n                        <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.addcontrolClick.bind(this)}>Add more</button>\r\n                        <br />\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-sm-5  col-form-label\"><b>If continuous monitoring,set DO2 value is  :</b></label>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"set DO 2 Value\"\r\n                                    name=\"do2value\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.do2value}\r\n                                    onChange={(event) => this.setState({ do2value: event.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div><br />\r\n\r\n                    <h5><b> Remarks of Aeration :</b></h5>\r\n                    <div class=\"form-group col-md-10\">\r\n                        <div> {this.remarksUI()} </div>\r\n                        <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.addRemarksClick.bind(this)}>Add more</button>\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-sm-5  col-form-label\"><b> Remarks of Aeration, Done By Name :</b></label>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"name\"\r\n                                    name=\"doneBy\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.doneBy}\r\n                                    onChange={(event) => this.setState({ doneBy: event.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div><br />\r\n\r\n                    <h5><b> Sample Labelling  :</b></h5>\r\n                    <div class=\"form-group col-md-10\">\r\n                        <div> {this.sampleLabelUI()} </div>\r\n                        <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.addSampleClick.bind(this)}>Add more</button>\r\n                    </div><br />\r\n\r\n                    <h5><b>QC Control Tests   :</b></h5>\r\n                    <div class=\"form-group col-md-10\">\r\n                        <div> {this.qcControlUI()} </div>\r\n                        <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.addQCControlClick.bind(this)}>Add more</button>\r\n\r\n                    </div><br />\r\n\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-3 col-form-label\"><b>General Remarks Of Culture :</b>\r\n                        </label>\r\n                        <div class=\"col-sm-9\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Remarks of Culture\"\r\n                                class=\"form-control\"\r\n                                name=\"generalRemarkOFCulture\"\r\n                                value={this.state.generalRemarkOFCulture}\r\n                                onChange={(event) => this.setState({ generalRemarkOFCulture: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-3 col-form-label\"><b>Details Of Harvesting:</b></label>\r\n                        <div class=\"col-sm-9\">\r\n                            <TextareaAutosize\r\n                                aria-label=\"minimum height\"\r\n                                type=\"text\"\r\n                                rowsMin={3}\r\n                                class=\"form-control\"\r\n                                name=\"detailsofharvesting\"\r\n                                value={this.state.detailsofharvesting}\r\n                                placeholder=\"Details of Harvesting\"\r\n                                onChange={(event) => this.setState({ detailsofharvesting: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm col-form-label\"><b>Reference Of Down Stream Processing:</b></label>\r\n                        <div class=\"col-sm-9\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"reference of down stream processing\"\r\n                                name=\"reffDownStreamProcessing\"\r\n                                class=\"form-control\"\r\n                                value={this.state.reffDownStreamProcessing}\r\n                                onChange={(event) => this.setState({ reffDownStreamProcessing: event.target.value })}\r\n                            /> </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <span class=\"col-sm-3\">\r\n                            <label><b>Done By Name 1:</b> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                class=\"form-control\"\r\n                                name=\"donebyname1\"\r\n                                value={this.state.donebyname1}\r\n                                onChange={(event) => this.setState({ donebyname1: event.target.value })}\r\n                            />\r\n                        </span>\r\n\r\n                        <span class=\"col-sm-3\">\r\n                            <label ><b>Done By Name 2:</b> </label>\r\n\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                class=\"form-control\"\r\n                                name=\"donebyname2\"\r\n                                value={this.state.donebyname2}\r\n                                onChange={(event) => this.setState({ donebyname2: event.target.value })}\r\n                            />\r\n                        </span>\r\n\r\n                    </div>\r\n                    <br />\r\n                    <h5><b>Control & Approval</b></h5>\r\n                    <br />\r\n                    <div class=\"form-group col\">\r\n                        <div class=\"form-group row\">\r\n                            <span class=\"col-sm-3\"><label>Prepared by: </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\" Prep. by Name\"\r\n                                    class=\"form-control\"\r\n                                    name=\"preparedby\"\r\n                                    value={this.state.preparedby}\r\n                                    onChange={(event) => this.setState({ preparedby: event.target.value })}\r\n                                /></span>\r\n                            <span class=\"col-sm-3\">\r\n                                <label>Date: </label>\r\n                                <input\r\n                                    type=\"Date\"\r\n                                    placeholder=\"Name\"\r\n                                    class=\"form-control\"\r\n                                    name=\"preparedByDate\"\r\n                                    value={this.state.preparedByDate}\r\n                                    onChange={(event) => this.setState({ preparedByDate: event.target.value })}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <span class=\"col-sm-3\"><label>Dept. Head: </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Dept. Head Name\"\r\n                                    name=\"deptHead\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.deptHead}\r\n                                    onChange={(event) => this.setState({ deptHead: event.target.value })}\r\n                                /></span>\r\n                            <span class=\"col-sm-3\">\r\n                                <label>Date: </label>\r\n                                <input\r\n                                    type=\"Date\"\r\n                                    placeholder=\"date\"\r\n                                    name=\"deptHeadDate\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.deptHeadDate}\r\n                                    onChange={(event) => this.setState({ deptHeadDate: event.target.value })}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <span class=\"col-sm-3\"><label class=\"row-sm-3\">QAD: </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"QAD Name\"\r\n                                    name=\"qad\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.qad}\r\n                                    onChange={(event) => this.setState({ qad: event.target.value })}\r\n                                /></span>\r\n                            <span class=\"col-sm-3\">\r\n                                <label>Date: </label>\r\n                                <input\r\n                                    type=\"Date\"\r\n                                    placeholder=\"Name\"\r\n                                    name=\"qadDate\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.qadDate}\r\n                                    onChange={(event) => this.setState({ qadDate: event.target.value })}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-success\" type=\"submit\" onClick={() => this.saveDetails()}>Save</button>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport StudentService from './StudentService';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default class UpdateDetails extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n            mc: this.props.match.params.id,\r\n            mcDate: '',\r\n            passageNo: '',\r\n            barCode: '',\r\n            nameOfOrganism: '',\r\n            source: '',\r\n            seedUsedAndQtyMedium: '',\r\n            mcCardOfSeed: '',\r\n            timeOfSetting: '',\r\n            tempIncubation: '',\r\n            medium: '',\r\n            mediumR: '',\r\n            otherAdditives: '',\r\n            otherAdditivesR: '',\r\n            alkali: '',\r\n            alkaliR: '',\r\n            acid: '',\r\n            acidR: '',\r\n            glassContainer: {\r\n\r\n            },\r\n            bioReactor: {\r\n\r\n            },\r\n            phController: [],\r\n            setPhValue: '',\r\n            do2Controller: [],\r\n            do2value: '',\r\n            remarksOnAeration: [],\r\n            doneBy: '',\r\n            sampleLabelling: [],\r\n            qcControllTest: [],\r\n            generalRemarkOFCulture: '',\r\n            detailsofharvesting: '',\r\n            reffDownStreamProcessing: '',\r\n            donebyname1: '',\r\n            donebyname2: '',\r\n            preparedby: '',\r\n            preparedByDate: '',\r\n            deptHead: '',\r\n            deptHeadDate: '',\r\n            qad: '',\r\n            qadDate: ''\r\n        }\r\n\r\n        this.updateDetails = this.updateDetails.bind(this);\r\n        this.viewDetails = this.viewDetails.bind(this);\r\n        this.removeClick = this.removeClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleControlChange = this.handleControlChange.bind(this);\r\n        this.removecontrolClick = this.removecontrolClick.bind(this);\r\n        this.handleRemarksChange = this.handleRemarksChange.bind(this);\r\n        this.removeRemarksClick = this.removeRemarksClick.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        StudentService.putDetails(this.state.mc).then((res) => {\r\n            let micro = res.data;\r\n            console.log(micro);\r\n            this.setState({\r\n                mc: micro.id, mcDate: micro.mcDate, passageNo: micro.passageNo,\r\n                barCode: micro.barCode, nameOfOrganism: micro.nameOfOrganism,\r\n                source: micro.source, seedUsedAndQtyMedium: micro.seedUsedAndQtyMedium, mcCardOfSeed: micro.mcCardOfSeed,\r\n                timeOfSetting: micro.timeOfSetting, tempIncubation: micro.tempIncubation, medium: micro.medium, mediumR: micro.mediumR,\r\n                otherAdditives: micro.otherAdditives, otherAdditivesR: micro.otherAdditivesR, alkali: micro.alkali,\r\n                alkaliR: micro.alkaliR, acid: micro.acid, acidR: micro.acidR, glassContainer: micro.glassContainer, bioReactor: micro.bioReactor,\r\n                phController: micro.phController, setPhValue: micro.setPhValue, do2Controller: micro.do2Controller,\r\n                do2value: micro.do2value, remarksOnAeration: micro.remarksOnAeration, doneBy: micro.doneBy, sampleLabelling: micro.sampleLabelling,\r\n                qcControllTest: micro.qcControllTest, generalRemarkOFCulture: micro.generalRemarkOFCulture, detailsofharvesting: micro.detailsofharvesting,\r\n                reffDownStreamProcessing: micro.reffDownStreamProcessing, donebyname1: micro.donebyname1, donebyname2: micro.donebyname2,\r\n                preparedby: micro.preparedby, preparedByDate: micro.preparedByDate, deptHead: micro.deptHead, deptHeadDate: micro.deptHeadDate,\r\n                qad: micro.qad, qadDate: micro.qadDate\r\n            })\r\n           \r\n        });\r\n    }\r\n\r\n    updateDetails = (event) => {\r\n        event.preventDefault();\r\n        let details = {\r\n            passageNo: this.state.passageNo, barCode: this.state.barCode, source: this.state.source,\r\n            seedUsedAndQtyMedium: this.state.seedUsedAndQtyMedium, mcCardOfSeed: this.state.mcCardOfSeed,\r\n            timeOfSetting: this.state.timeOfSetting, tempIncubation: this.state.tempIncubation,\r\n            medium: this.state.medium, mediumR: this.state.mediumR, otherAdditives: this.state.otherAdditives,\r\n            otherAdditivesR: this.state.otherAdditivesR, alkali: this.state.alkali, alkaliR: this.state.alkaliR,\r\n            acid: this.state.acid, acidR: this.state.acidR, glassContainer: this.state.glassContainer,\r\n            bioReactor: this.state.bioReactor, phController: this.state.phController, setPhValue: this.state.setPhValue,\r\n            do2Controller: this.state.do2Controller, do2value: this.state.do2value, remarksOnAeration: this.state.remarksOnAeration,\r\n            doneBy: this.state.doneBy, sampleLabelling: this.state.sampleLabelling, qcControllTest: this.state.qcControllTest,\r\n            generalRemarkOFCulture: this.state.generalRemarkOFCulture, detailsofharvesting: this.state.detailsofharvesting,\r\n            reffDownStreamProcessing: this.state.reffDownStreamProcessing, donebyname1: this.state.donebyname1,\r\n            donebyname2: this.state.donebyname2, preparedby: this.state.preparedby, preparedByDate: this.state.preparedByDate,\r\n            deptHead: this.state.deptHead, deptHeadDate: this.state.deptHeadDate, qad: this.state.qad, qadDate: this.state.qadDate\r\n        };\r\n        console.log('Details=>' + JSON.stringify(details));\r\n        StudentService.updateDetails(details, this.state.mc).then((res) => {\r\n            this.props.history.push('/Get_Details');\r\n        })\r\n    }\r\n\r\n\r\n    createUI() {\r\n        return this.state.phController.map((index, ii) =>\r\n            <div class=\"form-row\" key={ii}>\r\n                <input type=\"time\" name=\"phattTime\" class=\"form-control col\" value={index.phattTime} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"At Time\" onChange={(event) => this.handleChange(ii, event)} />\r\n                <input type=\"text\" name=\"ph\" class=\"form-control col\" value={index.ph} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"PH\" onChange={(event) => this.handleChange(ii, event)} />\r\n                <div class=\"form-group col-md-6\">\r\n                    <input type=\"text\" class=\"form-control col\" name=\"phAlkali\" value={index.phAlkali} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"Alkali/Acid addition\" onChange={(event) => this.handleChange(ii, event)} />\r\n                </div>\r\n                <DeleteIcon style={{ fontSize: \"45\" }} onClick={(event) => this.removeClick(ii, event)} />\r\n            </div>\r\n        )\r\n    }\r\n    controlUI() {\r\n        return this.state.do2Controller.map((index, ii) =>\r\n            <div class=\"form-row\" key={ii}>\r\n                <input type=\"time\" name=\"do2AtTime\" class=\"form-control col\" value={index.do2AtTime} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"At Time\" onChange={(event) => this.handleControlChange(ii, event)} />\r\n                <input type=\"text\" name=\"o2\" class=\"form-control col\" value={index.o2} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"O2\" onChange={(event) => this.handleControlChange(ii, event)} />\r\n                <div class=\"form-group col-md-6\">\r\n                    <input type=\"text\" name=\"gasOrAirAddition\" class=\"form-control col\" value={index.gasOrAirAddition} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"gas/air addition\" onChange={(event) => this.handleControlChange(ii, event)} />\r\n                </div>\r\n                <DeleteIcon style={{ fontSize: \"45\" }} onClick={(event) => this.removecontrolClick(ii, event)} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    remarksUI() {\r\n        return this.state.remarksOnAeration.map((index, ii) =>\r\n            <div class=\"form-row\" key={ii}>\r\n                <input type=\"date\" name=\"aerationDate\" class=\"form-control col\" value={index.aerationDate} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Do 2 at Time\" onChange={(event) => this.handleRemarksChange(ii, event)} />\r\n                <input type=\"time\" name=\"aerationTime\" class=\"form-control col\" value={index.aerationTime} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Time\" onChange={(event) => this.handleRemarksChange(ii, event)} />\r\n                <div class=\"form-group col-md-6\">\r\n                    <input type=\"text\" name=\"aerationDetails\" class=\"form-control col\" value={index.aerationDetails} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"Details of addition\" onChange={(event) => this.handleRemarksChange(ii, event)} />\r\n                </div>\r\n                <DeleteIcon style={{ fontSize: \"45\" }} onClick={(event) => this.removeRemarksClick(ii, event)} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    sampleLabelUI() {\r\n        return this.state.sampleLabelling.map((index, ii) =>\r\n            <div class=\"form-row\" key={ii}>\r\n                <input type=\"date\" name=\"sampleLabellingDate\" class=\"form-control col\" value={index.sampleLabellingDate} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Date\" onChange={(event) => this.handleSampleChange(ii, event)} />\r\n                <input type=\"time\" name=\"sampleLabellingTime\" class=\"form-control col\" value={index.sampleLabellingTime} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"O2\" onChange={(event) => this.handleSampleChange(ii, event)} />\r\n                <div class=\"form-group col-md-6\">\r\n                    <input type=\"text\" name=\"sampleLabellingDetails\" class=\"form-control col\" value={index.sampleLabellingDetails} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"Details of Sample\" onChange={(event) => this.handleSampleChange(ii, event)} />\r\n                </div>\r\n                <input type=\"text\" name=\"sampleLabellingQty\" class=\"form-control col\" value={index.sampleLabellingQty} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Qty\" onChange={(event) => this.handleSampleChange(ii, event)} />\r\n                <DeleteIcon style={{ fontSize: \"45\" }} onClick={(event) => this.removeSampleClick(ii, event)} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    qcControlUI() {\r\n        return this.state.qcControllTest.map((index, ii) =>\r\n            <div class=\"form-row\" key={ii}>\r\n                <input type=\"number\" name=\"qcSampleNo\" class=\"form-control col\" value={index.qcSampleNo} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"sample no\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                <input type=\"text\" name=\"nameOFTest\" class=\"form-control col\" value={index.nameOFTest} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Name of the Test\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                <input type=\"text\" name=\"qcRefNo\" class=\"form-control col\" value={index.qcRefNo} style={{ margin: '5px 10px 10px 0px' }}\r\n                    placeholder=\"Test Ref.no\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                <div class=\"form-group col-md-5\">\r\n                    <input type=\"text\" name=\"qcresult\" class=\"form-control col\" value={index.qcresult} style={{ margin: '5px 10px 10px 0px' }}\r\n                        placeholder=\"Result\" onChange={(event) => this.handleQcChange(ii, event)} />\r\n                </div>\r\n\r\n                <DeleteIcon style={{ fontSize: \"45\" }} onClick={(event) => this.removeQcClick(ii, event)} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    async addClick(event) {\r\n        event.preventDefault();\r\n        const fields = [...this.state.phController];\r\n        //console.log(fields)\r\n        //await fields.push({ phattTime: '', ph: '', phAlkali: '' });\r\n        await console.log(\"Fields :::: \", fields)\r\n        if (fields.length === 0) {\r\n            await this.setState({ phController: [...this.state.phController, fields] })\r\n        } else {\r\n            await this.setState({ phController: [...this.state.phController, {}] })\r\n        }\r\n\r\n        await console.log(this.state.phController);\r\n    }\r\n\r\n    async addcontrolClick(event) {\r\n        event.preventDefault();\r\n        const fields = [...this.state.do2Controller];\r\n        //console.log(fields)\r\n        //await fields.push({ phattTime: '', ph: '', phAlkali: '' });\r\n        //await console.log(\"Fields :::: \", fields)\r\n        if (fields.length === 0) {\r\n            await this.setState({ do2Controller: [...this.state.do2Controller, fields] })\r\n        } else {\r\n            await this.setState({ do2Controller: [...this.state.do2Controller, {}] })\r\n        }\r\n\r\n        await console.log(this.state.do2Controller);\r\n    }\r\n    async addRemarksClick(event) {\r\n        event.preventDefault();\r\n        const fields = [...this.state.remarksOnAeration];\r\n        //console.log(fields)\r\n        //await fields.push({ phattTime: '', ph: '', phAlkali: '' });\r\n        //await console.log(\"Fields :::: \", fields)\r\n        if (fields.length === 0) {\r\n            await this.setState({ remarksOnAeration: [...this.state.remarksOnAeration, fields] })\r\n        } else {\r\n            await this.setState({ remarksOnAeration: [...this.state.remarksOnAeration, {}] })\r\n        }\r\n\r\n        await console.log(this.state.remarksOnAeration);\r\n    }\r\n    async addSampleClick(event) {\r\n        event.preventDefault();\r\n        const fields = [...this.state.sampleLabelling];\r\n        //console.log(fields)\r\n        //await fields.push({ phattTime: '', ph: '', phAlkali: '' });\r\n        //await console.log(\"Fields :::: \", fields)\r\n        if (fields.length === 0) {\r\n            await this.setState({ sampleLabelling: [...this.state.sampleLabelling, fields] })\r\n        } else {\r\n            await this.setState({ sampleLabelling: [...this.state.sampleLabelling, {}] })\r\n        }\r\n\r\n        await console.log(this.state.sampleLabelling);\r\n    }\r\n\r\n    async addQCControlClick(event) {\r\n        event.preventDefault();\r\n        const fields = [...this.state.qcControllTest];\r\n        //console.log(fields)\r\n        //await fields.push({ phattTime: '', ph: '', phAlkali: '' });\r\n        //await console.log(\"Fields :::: \", fields)\r\n        if (fields.length === 0) {\r\n            await this.setState({ qcControllTest: [...this.state.qcControllTest, fields] })\r\n        } else {\r\n            await this.setState({ qcControllTest: [...this.state.qcControllTest, {}] })\r\n        }\r\n\r\n        await console.log(this.state.qcControllTest);\r\n    }\r\n\r\n\r\n    async removeClick(index, event) {\r\n        event.preventDefault();\r\n        let values = [...this.state.phController];\r\n        await values.splice(index, 1);\r\n        await this.setState({ phController: values });\r\n        console.log(values);\r\n\r\n    }\r\n    async removecontrolClick(index, event) {\r\n        event.preventDefault();\r\n        let values = [...this.state.do2Controller];\r\n        await values.splice(index, 1);\r\n        await this.setState({ do2Controller: values });\r\n        console.log(values);\r\n\r\n    }\r\n    async removeRemarksClick(index, event) {\r\n        event.preventDefault();\r\n        let values = [...this.state.remarksOnAeration];\r\n        await values.splice(index, 1);\r\n        await this.setState({ remarksOnAeration: values });\r\n        console.log(values);\r\n\r\n    }\r\n    async removeSampleClick(index, event) {\r\n        event.preventDefault();\r\n        let values = [...this.state.sampleLabelling];\r\n        await values.splice(index, 1);\r\n        await this.setState({ sampleLabelling: values });\r\n        console.log(values);\r\n\r\n    }\r\n    async removeQcClick(index, event) {\r\n        event.preventDefault();\r\n        let values = [...this.state.qcControllTest];\r\n        await values.splice(index, 1);\r\n        await this.setState({ qcControllTest: values });\r\n        console.log(values);\r\n\r\n    }\r\n\r\n    handleChange(index, event) {\r\n        //console.log(index,\" :: \",event.target.value)\r\n        let values = [...this.state.phController];\r\n        //console.log(values);\r\n        let { name, value } = event.target;\r\n        values[index] = { ...values[index], [name]: value };\r\n        console.log(values);\r\n        this.setState({ phController: values });\r\n    }\r\n    handleControlChange(index, event) {\r\n        //console.log(index,\" :: \",event.target.value)\r\n        let values = [...this.state.do2Controller];\r\n        //console.log(values);\r\n        let { name, value } = event.target;\r\n        values[index] = { ...values[index], [name]: value };\r\n        console.log(values);\r\n        this.setState({ do2Controller: values });\r\n    }\r\n    handleRemarksChange(index, event) {\r\n        //console.log(index,\" :: \",event.target.value)\r\n        let values = [...this.state.remarksOnAeration];\r\n        //console.log(values);\r\n        let { name, value } = event.target;\r\n        values[index] = { ...values[index], [name]: value };\r\n        console.log(values);\r\n        this.setState({ remarksOnAeration: values });\r\n    }\r\n    handleSampleChange(index, event) {\r\n        //console.log(index,\" :: \",event.target.value)\r\n        let values = [...this.state.sampleLabelling];\r\n        //console.log(values);\r\n        let { name, value } = event.target;\r\n        values[index] = { ...values[index], [name]: value };\r\n        console.log(values);\r\n        this.setState({ sampleLabelling: values });\r\n    }\r\n    handleQcChange(index, event) {\r\n        //console.log(index,\" :: \",event.target.value)\r\n        let values = [...this.state.qcControllTest];\r\n        //console.log(values);\r\n        let { name, value } = event.target;\r\n        values[index] = { ...values[index], [name]: value };\r\n        console.log(values);\r\n        this.setState({ qcControllTest: values });\r\n    }\r\n    viewDetails() {\r\n        this.props.history.push('/Get_Details');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div  >\r\n                <div>\r\n                    <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.viewDetails}>View Records</button>\r\n                </div>\r\n                <form style={{ marginTop: '20px' }}  >\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>MC: </b></label>\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"MC\"\r\n                                name=\"mc\"\r\n                                class=\"form-control\"\r\n                                /*   className=\"form-control\" */\r\n                                value={this.state.mc}\r\n                                // onChange={(event) => this.setState({ mc: event.target.value })}\r\n                                required\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Date: </b></label>\r\n                            <input\r\n                                id=\"date\"\r\n                                type=\"date\"\r\n                                name=\"mcDate\"\r\n                                class=\"form-control\"\r\n                                /*  data-date-format=\"dd-mm-yyyy\" */\r\n                                value={this.state.mcDate}\r\n                                // onChange={(event) => this.setState({ mcDate: event.target.value })}\r\n                                required\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Passage:  </b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"passage\"\r\n                                class=\"form-control\"\r\n                                name=\"passageNo\"\r\n                                value={this.state.passageNo}\r\n                                onChange={(event) => this.setState({ passageNo: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Barcode: </b> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                placeholder=\"barcode\"\r\n                                name=\"barCode\"\r\n                                value={this.state.barCode}\r\n                                onChange={(event) => this.setState({ barCode: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Name of Organism:  </b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name of organism\"\r\n                                class=\"form-control\"\r\n                                name=\"nameOfOrganism\"\r\n                                value={this.state.nameOfOrganism}\r\n                                // onChange={(event) => this.setState({ nameOfOrganism: event.target.value })}\r\n                                required\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Source: </b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"source\"\r\n                                class=\"form-control\"\r\n                                name=\"source\"\r\n                                value={this.state.source}\r\n                                onChange={(event) => this.setState({ source: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Seed Used & Quantity Medium:</b> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"seed used & Qty\"\r\n                                class=\"form-control\"\r\n                                name=\"seedUsedAndQtyMedium\"\r\n                                value={this.state.seedUsedAndQtyMedium}\r\n                                onChange={(event) => this.setState({ seedUsedAndQtyMedium: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>MC card of seed : </b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"MC card of seed\"\r\n                                name=\"mcCardOfSeed\"\r\n                                class=\"form-control \"\r\n                                value={this.state.mcCardOfSeed}\r\n                                onChange={(event) => this.setState({ mcCardOfSeed: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Time of Setting up :</b></label>\r\n                            <input\r\n                                type=\"time\"\r\n                                placeholder=\"Time of Setting up\"\r\n                                name=\"timeOfSetting\"\r\n                                class=\"form-control\"\r\n                                value={this.state.timeOfSetting}\r\n                                onChange={(event) => this.setState({ timeOfSetting: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label><b>Temp. Incubation(\\B0C):</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Temp. incubation\"\r\n                                class=\"form-control\"\r\n                                name=\"tempIncubation\"\r\n                                value={this.state.tempIncubation}\r\n                                onChange={(event) => this.setState({ tempIncubation: event.target.value })}\r\n                            /></div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Medium :</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Medium\"\r\n                                class=\"form-control\"\r\n                                name=\"medium\"\r\n                                value={this.state.medium}\r\n                                onChange={(event) => this.setState({ medium: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Medium R:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Medium R\"\r\n                                class=\"form-control\"\r\n                                name=\"mediumR\"\r\n                                value={this.state.mediumR}\r\n                                onChange={(event) => this.setState({ mediumR: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Other Additives:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Other Additives\"\r\n                                class=\"form-control\"\r\n                                name=\"otherAdditives\"\r\n                                value={this.state.otherAdditives}\r\n                                onChange={(event) => this.setState({ otherAdditives: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Other Additives R:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Other Additives R\"\r\n                                class=\"form-control\"\r\n                                name=\"otherAdditivesR\"\r\n                                value={this.state.otherAdditivesR}\r\n                                onChange={(event) => this.setState({ otherAdditivesR: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Alkali:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"alkali\"\r\n                                class=\"form-control\"\r\n                                name=\"alkali\"\r\n                                value={this.state.alkali}\r\n                                onChange={(event) => this.setState({ alkali: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Alkali R:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"alkali R\"\r\n                                class=\"form-control\"\r\n                                name=\"alkaliR\"\r\n                                value={this.state.alkaliR}\r\n                                onChange={(event) => this.setState({ alkaliR: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Acid:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"acid\"\r\n                                class=\"form-control\"\r\n                                name=\"acid\"\r\n                                value={this.state.acid}\r\n                                onChange={(event) => this.setState({ acid: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 \">\r\n                            <label><b>Acid R:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"acid R\"\r\n                                class=\"form-control\"\r\n                                name=\"acidR\"\r\n                                value={this.state.acidR}\r\n                                onChange={(event) => this.setState({ acidR: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div class=\"form-row\">\r\n                        <span class=\"form-group col-md-6 \"><h5><b>If Glass Container</b> </h5>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">Type of Container :</label>\r\n\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"type of Container\"\r\n                                    name=\"typeOfContainer\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.glassContainer.typeOfContainer}\r\n                                    onChange={(event) => this.setState({ glassContainer: { ...this.state.glassContainer, typeOfContainer: event.target.value } })}\r\n                                />\r\n                            </div>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">No.of.Container:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"no.of.Container\"\r\n                                    name=\"numberOfContainer\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.glassContainer.numberOfContainer}\r\n                                    onChange={(event) => this.setState({ glassContainer: { ...this.state.glassContainer, numberOfContainer: event.target.value } })}\r\n                                />\r\n                            </div>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">Agitation Type & speed:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"agitation type & speed\"\r\n                                    name=\"agitationTypeSpeed\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.glassContainer.agitationTypeSpeed}\r\n                                    onChange={(event) => this.setState({ glassContainer: { ...this.state.glassContainer, agitationTypeSpeed: event.target.value } })}\r\n                                />\r\n                            </div>\r\n                        </span>\r\n                        <span class=\"form-group col-md-6 \"><h5><b>If Bioreactor : </b></h5>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">Type & Size :</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"bioreactor type & size\"\r\n                                    name=\"bioreactorTypeSize\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.bioReactor.bioreactorTypeSize}\r\n                                    onChange={(event) => this.setState({ bioReactor: { ...this.state.bioReactor, bioreactorTypeSize: event.target.value } })}\r\n                                />\r\n                            </div>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">Type Agitation/Tilt angle :</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"no.of.Container\"\r\n                                    name=\"typeAgitationOrTiltAngle\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.bioReactor.typeAgitationOrTiltAngle}\r\n                                    onChange={(event) => this.setState({ bioReactor: { ...this.state.bioReactor, typeAgitationOrTiltAngle: event.target.value } })}\r\n                                /> </div>\r\n                            <div class=\"form-group col-md-7 \">\r\n                                <label class=\"my-1 mr-2\">Agitation speed :</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"agitation type & speed\"\r\n                                    name=\"agitationSpeed\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.bioReactor.agitationSpeed}\r\n                                    onChange={(event) => this.setState({ bioReactor: { ...this.state.bioReactor, agitationSpeed: event.target.value } })}\r\n                                />\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <h5><b>PH Control :</b></h5>\r\n                    <div class=\"form-group col-md-10\">\r\n\r\n                        <div> {this.createUI()} </div>\r\n                        <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.addClick.bind(this)}>Add more</button>\r\n                        <div class=\"form-group row\"><label class=\"col-sm-5  col-form-label\"><b>If continuous monitoring, the set pH value is :</b></label>\r\n                            <div class=\"col-sm-3\"><input\r\n                                type=\"text\"\r\n                                placeholder=\"set Ph Value\"\r\n                                name=\"setPhValue\"\r\n                                class=\"form-control\"\r\n                                value={this.state.setPhValue}\r\n                                onChange={(event) => this.setState({ setPhValue: event.target.value })}\r\n                            /></div> </div>\r\n                    </div><br />\r\n                    <h5><b>DO2 CONTROL  :</b></h5>\r\n                    <div class=\"form-group col-md-10\">\r\n                        <div> {this.controlUI()} </div>\r\n                        <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.addcontrolClick.bind(this)}>Add more</button>\r\n                        <br />\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-sm-5  col-form-label\"><b>If continuous monitoring, the set DO2 value is  :</b></label>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"set DO 2 Value\"\r\n                                    name=\"do2value\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.do2value}\r\n                                    onChange={(event) => this.setState({ do2value: event.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div><br />\r\n\r\n                    <h5><b> Remarks of Aeration :</b></h5>\r\n                    <div class=\"form-group col-md-10\">\r\n                        <div> {this.remarksUI()} </div>\r\n                        <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.addRemarksClick.bind(this)}>Add more</button>\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-sm-5  col-form-label\"><b> Remarks of Aeration, Done By Name :</b></label>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"name\"\r\n                                    name=\"doneBy\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.doneBy}\r\n                                    onChange={(event) => this.setState({ doneBy: event.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div><br />\r\n\r\n                    <h5><b> Sample Labelling  :</b></h5>\r\n                    <div class=\"form-group col-md-10\">\r\n                        <div> {this.sampleLabelUI()} </div>\r\n                        <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.addSampleClick.bind(this)}>Add more</button>\r\n\r\n                    </div><br />\r\n                    <h5><b>QC Control Tests   :</b></h5>\r\n                    <div class=\"form-group col-md-10\">\r\n                        <div> {this.qcControlUI()} </div>\r\n                        <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-primary\" onClick={this.addQCControlClick.bind(this)}>Add more</button>\r\n\r\n                    </div><br />\r\n\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-3 col-form-label\"><b>General Remarks Of Culture :</b>\r\n                        </label>\r\n                        <div class=\"col-sm-9\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Remarks of Culture\"\r\n                                class=\"form-control\"\r\n                                name=\"generalRemarkOFCulture\"\r\n                                value={this.state.generalRemarkOFCulture}\r\n                                onChange={(event) => this.setState({ generalRemarkOFCulture: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-3 col-form-label\"><b>Details Of Harvesting:</b></label>\r\n                        <div class=\"col-sm-9\">\r\n                            <TextareaAutosize\r\n                                aria-label=\"minimum height\"\r\n                                type=\"text\"\r\n                                rowsMin={3}\r\n                                class=\"form-control\"\r\n                                name=\"detailsofharvesting\"\r\n                                value={this.state.detailsofharvesting}\r\n                                placeholder=\"Details of Harvesting\"\r\n                                onChange={(event) => this.setState({ detailsofharvesting: event.target.value })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm col-form-label\"><b>Reference Of Down Stream Processing:</b></label>\r\n                        <div class=\"col-sm-9\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"reference of down stream processing\"\r\n                                name=\"reffDownStreamProcessing\"\r\n                                class=\"form-control\"\r\n                                value={this.state.reffDownStreamProcessing}\r\n                                onChange={(event) => this.setState({ reffDownStreamProcessing: event.target.value })}\r\n                            /> </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <span class=\"col-sm-3\">\r\n                            <label><b>Done By Name 1:</b> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                class=\"form-control\"\r\n                                name=\"donebyname1\"\r\n                                value={this.state.donebyname1}\r\n                                onChange={(event) => this.setState({ donebyname1: event.target.value })}\r\n                            />\r\n                        </span>\r\n\r\n                        <span class=\"col-sm-3\">\r\n                            <label ><b>Done By Name 2:</b> </label>\r\n\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                class=\"form-control\"\r\n                                name=\"donebyname2\"\r\n                                value={this.state.donebyname2}\r\n                                onChange={(event) => this.setState({ donebyname2: event.target.value })}\r\n                            />\r\n                        </span>\r\n\r\n                    </div>\r\n                    <br />\r\n                    <h5><b>Control & Approval</b></h5>\r\n                    <br />\r\n                    <div class=\"form-group col\">\r\n                        <div class=\"form-group row\">\r\n                            <span class=\"col-sm-3\"><label>Prepared by: </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\" Prep. by Name\"\r\n                                    class=\"form-control\"\r\n                                    name=\"preparedby\"\r\n                                    value={this.state.preparedby}\r\n                                    onChange={(event) => this.setState({ preparedby: event.target.value })}\r\n                                /></span>\r\n                            <span class=\"col-sm-3\">\r\n                                <label>Date: </label>\r\n                                <input\r\n                                    type=\"Date\"\r\n                                    placeholder=\"Name\"\r\n                                    class=\"form-control\"\r\n                                    name=\"preparedByDate\"\r\n                                    value={this.state.preparedByDate}\r\n                                    onChange={(event) => this.setState({ preparedByDate: event.target.value })}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <span class=\"col-sm-3\"><label>Dept. Head: </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Dept. Head Name\"\r\n                                    name=\"deptHead\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.deptHead}\r\n                                    onChange={(event) => this.setState({ deptHead: event.target.value })}\r\n                                /></span>\r\n                            <span class=\"col-sm-3\">\r\n                                <label>Date: </label>\r\n                                <input\r\n                                    type=\"Date\"\r\n                                    placeholder=\"date\"\r\n                                    name=\"deptHeadDate\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.deptHeadDate}\r\n                                    onChange={(event) => this.setState({ deptHeadDate: event.target.value })}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <span class=\"col-sm-3\"><label class=\"row-sm-3\">QAD: </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"QAD Name\"\r\n                                    name=\"qad\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.qad}\r\n                                    onChange={(event) => this.setState({ qad: event.target.value })}\r\n                                /></span>\r\n                            <span class=\"col-sm-3\">\r\n                                <label>Date: </label>\r\n                                <input\r\n                                    type=\"Date\"\r\n                                    placeholder=\"Name\"\r\n                                    name=\"qadDate\"\r\n                                    class=\"form-control\"\r\n                                    value={this.state.qadDate}\r\n                                    onChange={(event) => this.setState({ qadDate: event.target.value })}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <button style={{ margin: '10px 0px 15px 0px' }} className=\"btn btn-success\" type=\"submit\" onClick={this.updateDetails}>Update</button>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n\r\nexport class InsertToro extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import \"antd/dist/antd.css\";\r\nimport React, { Component } from 'react';\r\nimport { Table, Input, Button, Space, Popconfirm } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport StudentService from './StudentService';\r\n\r\n\r\n\r\n\r\nexport class SearchComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            searchText: '',\r\n            searchedColumn: '',\r\n            list: []\r\n        }\r\n        this.addDetails = this.addDetails.bind(this);\r\n        this.editDetails = this.editDetails.bind(this);\r\n        this.deleteDetails = this.deleteDetails.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        StudentService.getDetails().then((res) => {\r\n            this.setState({ list: res.data })\r\n        })\r\n    }\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                    text\r\n                ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n    addDetails() {\r\n        this.props.history.push('/Insert_Details');\r\n    };\r\n    editDetails(id) {\r\n        console.log(\"Record ::: \",id)\r\n        this.props.history.push(`/Update_Details/${id}`);\r\n    }\r\n    deleteDetails(id) {\r\n        console.log(id)\r\n        StudentService.deleteDetail(id).then((res) => {\r\n            this.setState({ list: this.state.list.filter((_) => _.id !== id) })\r\n        })\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: 'MC',\r\n                dataIndex: 'id',\r\n                key: 'name',\r\n                width: '10%',\r\n                ...this.getColumnSearchProps('id'),\r\n            },\r\n            {\r\n                title: 'Date',\r\n                dataIndex: 'mcDate',\r\n                key: 'age',\r\n                width: '15%',\r\n                ...this.getColumnSearchProps('mcDate'),\r\n            },\r\n            {\r\n                title: 'Name Of Organism',\r\n                dataIndex: 'nameOfOrganism',\r\n                key: 'nameOfOrganism',\r\n                width: '25%',\r\n                ...this.getColumnSearchProps('nameOfOrganism'),\r\n            },\r\n            {\r\n                title: 'Modified Date',\r\n                dataIndex: 'updatedDate',\r\n                key: 'updatedDate',\r\n                // width: '10%',\r\n\r\n            },\r\n            {\r\n                title: 'Actions',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                width: '25%',\r\n                render: (record) =>\r\n                    <div>\r\n                        <button class=\"form-group \" style={{ marginLeft: '30px' }} className=\"btn btn-info\" onClick={() => this.editDetails(record) } >Edit</button>\r\n                        <button style={{ marginLeft: '20px', marginTop: '3px' }} className=\"btn btn-danger\" onClick={() => { this.deleteDetails(record) }}>Delete</button></div>\r\n                    \r\n\r\n\r\n            }\r\n\r\n        ];\r\n        return (<div >\r\n            <div style={{ margin: '5px 0px 50px 0px' }}><h2 className=\"text-center\" >Microbial Records</h2></div>\r\n            <div class=\"form-group col-md-3\">\r\n                <button className=\"btn btn-primary\" onClick={this.addDetails}>Insert New Record</button>\r\n\r\n            </div>\r\n            <Table\r\n                columns={columns}\r\n                bordered\r\n                // style={{ margin: '20px 0px 0px 0px' }} \r\n                className=\"table-striped \"\r\n                dataSource={this.state.list}\r\n            />\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport ListDetails from \"./ListDetails\";\r\nimport InsertDetails from \"./InsertDetails\";\r\nimport UpdateDetails from \"./UpdateDetails\";\r\nimport { InsertToro } from \"./InsertToro\";\r\nimport { SearchComponent } from \"./SearchComponent\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n  const { children, window } = props;\r\n  const classes = useStyles();\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(\r\n      \"#back-to-top-anchor\"\r\n    );\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func\r\n};\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">Lab Links</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <Container>\r\n        <div class=\"container\">\r\n          <Switch>\r\n            <Route path=\"/Get_Details\" exact component={SearchComponent} />\r\n            <Route path=\"/Insert_Details\" exact component={InsertDetails} />\r\n            <Route path=\"/Update_Details/:id\" exact component={UpdateDetails} />\r\n            <Route path=\"/Insert_Toro\" exact component={InsertToro} />\r\n            <Route path=\"/search\" exact component={ListDetails} />\r\n          </Switch>\r\n        </div>\r\n      </Container>\r\n      <ScrollTop {...props}>\r\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from './components/Header';\nimport ListDetails from './components/ListDetails';\nimport InsertDetails from './components/InsertDetails';\nimport UpdateDetails from './components/UpdateDetails';\nimport InsertToro from './components/InsertToro';\n\n\nfunction App() {\n  return (<div>\n    <Router>\n      <Header />\n    </Router>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}